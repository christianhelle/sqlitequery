name: sqlitequery
base: core22
summary: Lightweight cross-platform SQLite database explorer
description: |
  SQLite Query Analyzer is a lightweight and efficient desktop utility designed
  to simplify the process of managing SQLite databases.
  
  It provides an intuitive interface for executing queries and direct table editing,
  making database operations seamless and straightforward.
  
  Features:
  - Cross platform - Runs natively on Windows, MacOS, and Linux
  - Easy-to-use interface for executing SQL queries
  - Fast table data editing
  - Persists application state and reloads last session on startup
  - Export database schema as CREATE TABLE statements
  - Export data as an SQL script containing INSERT statements or as CSV files
  - Desktop color theme awareness with automatic switching between dark/light themes

version: '0.2.32'
grade: stable
confinement: strict
architectures:
  - amd64

apps:
  sqlitequery:
    command: usr/bin/sqlitequery
    desktop: usr/share/applications/sqlitequery.desktop
    extensions: [gnome]
    plugs:
      - home
      - desktop
      - desktop-legacy
      - x11
      - browser-support
      - network
      - gsettings
      - opengl

parts:
  sqlitequery:
    plugin: cmake
    source: src
    source-subdir: project
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DEXECUTABLE_NAME=sqlitequery
    build-packages:
      - build-essential
      - imagemagick
      - libglx-dev
      - libgl1-mesa-dev
      - libxkbcommon-x11-dev
      - libfontconfig1
      - libdbus-1-dev
      - python3
      - python3-pip

    override-build: |
      python3 -m venv ./venv
      ./venv/bin/pip install aqtinstall
      ./venv/bin/aqt install-qt linux desktop 6.9.0

      # Setup environment variables for Qt
      export QT_DIR=/root/project/6.9.0/gcc_64
      export Qt6_DIR=$QT_DIR
      export PATH=$PATH:$QT_DIR/bin
      export QMAKE=$QT_DIR/bin/qmake
      export QT_PLUGIN_PATH=$QT_DIR/plugins
      
      # Fix CMake finder for Qt6
      mkdir -p $SNAPCRAFT_PART_BUILD/build
      cd $SNAPCRAFT_PART_BUILD/build
      
      # Configure with qmake instead of CMake for more reliable Qt dependency handling
      qmake $SNAPCRAFT_PART_SRC/project/SQLiteAnalyzer.pro CONFIG+=release PREFIX=/usr
      
      # Build
      make -j$(nproc)
      
      # Install
      make install INSTALL_ROOT=$CRAFT_PART_INSTALL
      
      # Create desktop file and icons
      mkdir -p $CRAFT_PART_INSTALL/usr/share/applications
      mkdir -p $CRAFT_PART_INSTALL/usr/share/icons/hicolor/256x256/apps
      cp $SNAPCRAFT_PART_SRC/resources/icon.ico $CRAFT_PART_INSTALL/usr/share/icons/hicolor/256x256/apps/sqlitequery.ico
      cat > $CRAFT_PART_INSTALL/usr/share/applications/sqlitequery.desktop << EOF
      [Desktop Entry]
      Version=1.0
      Type=Application
      Name=SQLite Query Analyzer
      Comment=Lightweight cross-platform SQLite database explorer
      Icon=sqlitequery
      Exec=sqlitequery %F
      Terminal=false
      Categories=Development;Utility;Database;
      MimeType=application/vnd.sqlite3;application/x-sqlite3;
      Keywords=sqlite;database;sql;query;
      EOF
      convert $SNAPCRAFT_PART_SRC/resources/icon.ico -resize 256x256 $CRAFT_PART_INSTALL/usr/share/icons/hicolor/256x256/apps/sqlitequery.png
