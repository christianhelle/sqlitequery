name: Windows Template

on:
  workflow_call:
    inputs:
      version:
        description: 'Version number for the build'
        required: true
        type: string
      release:
        description: 'Is release build'
        required: false
        default: false
        type: boolean

jobs:
  template:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update Version Number (Qt Project)
        shell: pwsh
        run: |
          $version = (Get-Content -Path src/project/SQLiteAnalyzer.pro -Raw) -replace 'VERSION = 1.0.0', 'VERSION = ${{ inputs.version }}'
          $version | Set-Content -Path src/project/SQLiteAnalyzer.pro

      - name: Update Version Number (CMake)
        shell: pwsh
        run: |
          $version = (Get-Content -Path src/project/CMakeLists.txt -Raw) -replace 'VERSION 1.0', 'VERSION "${{ env.VERSION }}"'
          $version | Set-Content -Path src/project/CMakeLists.txt

      - name: Update Version Number (Inno Setup)
        shell: pwsh
        run: |
          $version = (Get-Content -Path src/project/setup.iss -Raw) -replace '#define MyAppVersion "1.0.0"', '#define MyAppVersion "${{ inputs.version }}"'
          $version | Set-Content -Path src/project/setup.iss

      - name: Update Version in code
        shell: pwsh
        run: |
          $version = (Get-Content -Path src/main.cpp -Raw) -replace '#define VERSION "1.0.0"', '#define VERSION "${{ inputs.version }}"'
          $version | Set-Content -Path src/main.cpp

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.9.0'
          host: windows
          target: desktop
          arch: win64_msvc2022_64
          dir: ${{ runner.temp }}
          setup-python: true

      - name: Download JOM
        uses: suisei-cn/actions-download-file@v1
        with:
          url: http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}\

      - name: Unzip JOM
        working-directory: ${{ runner.temp }}
        run: |
          7z x jom.zip -ojom
              
      - name: Create build directory
        run: mkdir ${{ runner.temp }}\build

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Build
        working-directory: ${{ github.workspace }}\src\project
        shell: pwsh
        run: |          
          cmake . `
            -DCMAKE_PREFIX_PATH=${{ runner.temp }}\Qt\6.9.0\msvc2022_64 `
            -DCMAKE_CXX_STANDARD=17 `
            -DCMAKE_CXX_FLAGS="/Zc:__cplusplus /permissive-" `
            -B build
          cmake --build build --config Release
          ${{ runner.temp }}\Qt\6.9.0\msvc2022_64\bin\windeployqt.exe .\build\Release\SQLiteQueryAnalyzer.exe
          rm .\build\Release\vc_redist.x64.exe

      - name: Zip build
        working-directory: ${{ runner.temp }}
        run: |
          7z a SQLiteQueryAnalyzer_Windows.zip ${{ github.workspace }}\src\project\build\Release\* -r
              
      - name: Publish Build
        uses: actions/upload-artifact@master
        with:
          name: SQLiteQuerAnalyzer_Windows_v${{ inputs.version }}
          path: ${{ runner.temp }}\SQLiteQueryAnalyzer_Windows.zip

      - name: Inno Setup
        working-directory: ${{ github.workspace }}\src\project
        run: |
          ..\..\deps\innosetup\ISCC.exe setup.iss

      - name: Publish Installer
        uses: actions/upload-artifact@master
        with:
          name: SQLiteQuerAnalyzer_Windows_Installer_v${{ inputs.version }}
          path: ${{ github.workspace }}\src\artifacts\SQLiteQueryAnalyzer-Setup.exe
    
      - name: Build Chocolatey Package
        working-directory: ${{ github.workspace }}\src\project\chocolatey
        run: choco pack sqlitequery.nuspec --version ${{ inputs.version }}
    
      - name: Publish Chocolatey Package
        uses: actions/upload-artifact@master
        with:
          name: ChocolateyPackage
          path: sqlitequery.${{ inputs.version }}.nupkg

      - name: Upload Package to Chocolatey
        working-directory: ${{ github.workspace }}\src\project\chocolatey
        if: ${{ inputs.release == true }} && github.ref == 'refs/heads/master'
        continue-on-error: true
        run: |
          choco apiKey --key ${{ secrets.CHOCOLATEY_API_KEY }} --source https://push.chocolatey.org/
          choco push sqlitequery.${{ inputs.version }}.nupkg --source https://push.chocolatey.org/
