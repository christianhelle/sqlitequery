name: build

on:
  push:
  pull_request:

jobs:

  ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.8.2'
    - name: QMake
      run: qmake
      working-directory: src
    - name: Make
      run: make
      working-directory: src

  mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.8.2'
    - name: QMake
      run: qmake
      working-directory: src
    - name: Make
      run: make
      working-directory: src
    - name: Publish artifacts
      uses: actions/upload-artifact@v4
      with:
        name: SQLiteQuerAnalyzer_MacOS_${{ github.run_number }}
        path: |
          src/*.app

  windows:
    runs-on:  windows-2019
    steps:
      - uses: actions/checkout@v4

      - name: Update Version Number (Qt Project)
        shell: pwsh
        run: |
          $version = (Get-Content -Path src/SQLiteAnalyzer.pro -Raw) -replace 'VERSION = .*', 'VERSION = ${{ github.run_number }}'
          $version | Set-Content -Path src/SQLiteAnalyzer.pro

      - name: Update Version Number (Inno Setup)
        shell: pwsh
        run: |
          $version = (Get-Content -Path src/setup.iss -Raw) -replace 'AppVersion= .*', 'AppVersion = ${{ github.run_number }}'
          $version | Set-Content -Path src/setup.iss

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.2'
          host: windows
          target: desktop
          arch: win64_msvc2022_64
          dir: ${{ runner.temp }}
          setup-python: false

      - name: Download JOM
        uses: suisei-cn/actions-download-file@v1
        with:
          url: http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}\

      - name: Unzip JOM
        working-directory: ${{ runner.temp }}
        run: |
          7z x jom.zip -ojom
              
      - name: Create build directory
        run: mkdir ${{ runner.temp }}\build

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Build
        working-directory: ${{ github.workspace }}\src
        run: |
          qmake -r SQLiteAnalyzer.pro
          ${{ runner.temp }}\jom\jom -j2
          windeployqt build\release\SQLiteQueryAnalyzer.exe --pdb --release --compiler-runtime
          copy C:\Windows\System32\concrt140.dll . 
          copy C:\Windows\System32\vccorlib140.dll .
          copy C:\Windows\System32\msvcp140.dll .
          copy C:\Windows\System32\vcruntime140.dll .
              
      - name: Zip build
        working-directory: ${{ runner.temp }}
        run: |
          7z a SQLiteQueryAnalyzer_Windows.zip ${{ github.workspace }}\src\build\release\* -r
              
      - name: Publish Build
        uses: actions/upload-artifact@master
        with:
          name: SQLiteQuerAnalyzer_Windows_${{ github.run_number }}.zip
          path: ${{ runner.temp }}\SQLiteQuerAnalyzer_Windows.zip

      - name: Inno Setup
        working-directory: ${{ github.workspace }}\src
        run: |
          ..\deps\innosetup\ISCC.exe setup.iss

      - name: Publish Installer
        uses: actions/upload-artifact@master
        with:
          name: SQLiteQuerAnalyzer_Windows_Installer_${{ github.run_number }}.zip
          path: ${{ github.workspace }}\src\Artifacts\SQLiteQueryAnalyzerSetup.exe
